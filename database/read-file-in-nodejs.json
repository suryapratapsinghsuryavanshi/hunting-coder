{
    "title": "What is the mechanism of reading the content of a file in Node.js?",
    "date": "Sun 08-28-2022",
    "desc": "Read file in nodejs.",
    "content": "<p>In this article, we will discuss the mechanism of reading a file in NodeJs.<\/p>\r\n\r\n<p>NodeJS is one of the most popular JavaScript frameworks that allows JavaScript to be used as a server-side language and to manage servers and their networks with the help of JavaScript and provide a pre-built module for working with files. Firstly we will understand how NodeJs works with files and after we will discuss how to read the data of a file and its mechanism.<\/p>\r\n\r\n<p>If the thought of as a server, then working with files is very common, we do most of the work on the server in files. It is very easy to work with files and also very convenient. If you look about a web service that runs a website, then it must have done it with files somewhere. We can work with files very easily in NodeJs<\/p>\r\n\r\n<h3>NodeJs work with files:<\/h3>\r\n\r\n<p>NodeJs provides us many ways to work with files NodeJs also has some built-in modules with the help of which we can work with files. NodeJs treats a file as a document with built-in functions to store and read the necessary information that we can use to work with our files. It is very common to work with files for development purposes as it makes our work easier. In daily computer use, the user may wish to read and write files and data in various directories such as saving and downloading files or accessing data used in other applications. Similarly, server programs or command line interface &quot;CLI&quot; tools may need to be written to a file to save the downloaded data, or data intensive applications may also need to be exported to &quot;JSON&quot; or other formats. Might be possible. These programs will need to communicate with the file system of the operating system they are running on so that the NodeJs in the server can manage it.<\/p>\r\n\r\n<p>if you want to more about file systems in NodeJs please refer to <a href=\"https:\/\/www.geeksforgeeks.org\/node-js-file-system-complete-reference\/\">this article.<\/a><\/p>\r\n\r\n<h3>Mechanism of reading a file in NodeJs:<\/h3>\r\n\r\n<p>In Node.js, you can work with files with the help of a built-in &quot;fs&quot; module and it&#39;s very simple. and this module includes all functionality that will help you to work with files, And it can operate with both types of files on a local machine or server. And it gives you two types of facilities, which have the ability to work synchronously and asynchronously, you can use it in any NodeJs file and for this, there is no need for any external package.<\/p>\r\n\r\n<h3>Reading the data in NodeJs Approach:<\/h3>\r\n\r\n<blockquote>\r\n<p>1) Have to work with the file system, so the &#39;fs&#39; module will be needed first, so require the &#39;fs&#39; module in our codebase.<\/p>\r\n\r\n<p>2) The read method of the &#39;fs&#39; module return buffer data, which will require a variable to hold.<\/p>\r\n\r\n<p>3) The buffer will store the data on a variable.<\/p>\r\n\r\n<p>4) Convert the buffer data to the normal string with the help of the toString() method.<\/p>\r\n\r\n<p>5) Finally log the data using the console.log() method.<\/p>\r\n<\/blockquote>\r\n\r\n<h3>How to read the data of a file in NodeJs:<\/h3>\r\n\r\n<p>Follow the below steps to read data from files in the use of NodeJs.<\/p>\r\n\r\n<h4>Step 1:<\/h4>\r\n\r\n<p>First, let&#39;s require a file system module into our program for reading the data from a file.<\/p>\r\n\r\n<pre>\r\nconst fs = require(&#39;fs&#39;);<\/pre>\r\n\r\n<p>After requiring the &#39;fs&#39; module moves to the second step.<\/p>\r\n\r\n<h4>Step 2:<\/h4>\r\n\r\n<p>In this step create a variable to contain the data of a file.<\/p>\r\n\r\n<pre>\r\nlet dataBufferContainer= &#39;&#39;;<\/pre>\r\n\r\n<h4>Step 3:<\/h4>\r\n\r\n<p>After making the variable, store the file buffer data to the variable in the use of the readFileSync or readFile Method.<\/p>\r\n\r\n<pre>\r\ndataBufferContainer = fs.readFileSync(&#39;file.js&#39;);<\/pre>\r\n\r\n<h4>Step 4:<\/h4>\r\n\r\n<p>Convert buffer value to the normal string value with the use of the toString() method.<\/p>\r\n\r\n<pre>\r\nlet data = dataBufferContainer.toString();<\/pre>\r\n\r\n<h4>Step 5:<\/h4>\r\n\r\n<p>Log the data using console.log() method.<\/p>\r\n\r\n<pre>\r\nconsole.log(data);<\/pre>\r\n\r\n<p>Finally, you have read the data from the file.<\/p>\r\n\r\n<h3>Final Code:<\/h3>\r\n\r\n<p><strong>index.js<\/strong><\/p>\r\n\r\n<p>Javascript<\/p>\r\n\r\n<pre>\r\n<code>\/\/ Firstly require a file-system module.\r\nconst fs = require('fs');\r\n\r\n\/\/ data container.\r\nlet dataBufferContainer = '';\r\n\r\n\/\/ read the use of fs.readFileSync method.\r\ndataBufferContainer = fs.readFileSync('file.js');\r\n\r\n\/\/ convert buffer data to string.\r\nlet data = dataBufferContainer.toString();\r\n\r\nconsole.log(data);<\/code><\/pre>\r\n\r\n<p><strong>file.js<\/strong><\/p>\r\n\r\n<p>Javascript<\/p>\r\n\r\n<pre>\r\n<code>GFG =&gt; Knowledge<\/code><\/pre>\r\n\r\n<p><strong>output:<\/strong><\/p>\r\n\r\n<p><img src=\"https:\/\/media.geeksforgeeks.org\/wp-content\/uploads\/20210728021328\/read.gif\" style=\"width:800px\" \/><\/p>\r\n\r\n<p>If you want more information about the &#39;fs&#39; module refers to the <a href=\"https:\/\/nodejs.org\/api\/fs.html\" rel=\"noopener noreferrer nofollow\" target=\"_blank\">official NodeJs website<\/a> and one <a href=\"https:\/\/www.geeksforgeeks.org\/node-js-file-system-complete-reference\/\">article<\/a> also.<\/p>\r\n",
    "author": "Suryapratap Singh",
    "like": 0
}