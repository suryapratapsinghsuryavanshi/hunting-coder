{
    "title": "What is the difference between chunk and the buffer data",
    "date": "Sun 08-28-2022",
    "desc": "Chunk Vs Buffer.",
    "content": "<p>First, let's discuss in the context of JavaScript, JavaScript does not have any mechanics to deal with and manipulate binary data. That's why we needed some mechanism to do this, so we have a global module in JavaScript called a buffer, which handles all the binary data. Buffer is usually a temporary memory in RAM, which deals with binary data, with the help of chunks, chunks are a small piece of binary data that travels from source to destination with the help of a stream.<\/p> <p>Check out this article if you want to learn more about <a href=\"https:\/\/www.geeksforgeeks.org\/javascript-tutorial\/\">JavaScript.<\/a><\/p> <p><img src=\"https:\/\/media.geeksforgeeks.org\/wp-content\/uploads\/20210807215116\/chunkbuffer.png\" style=\"width:1000px\" \/><\/p> <p><strong>Chunk:<\/strong> It is the small piece of binary data that we want to transfer the source to the destination, so we have a mechanism called chunks that contain the smaller binary data and travel source to the destination and use streams to transfer the data. Happens. The chunks contain all the information about the binary data such as which chunks need to be processed and which chunks do not need to be processed. If you want to learn more about Chunks refer to <a href=\"https:\/\/www.geeksforgeeks.org\/what-is-chunk-in-node-js\/\">this article.<\/a><\/p> <p><strong>Buffer:<\/strong> It is a temporary memory in RAM that manages chunk data and sends it for processing, Buffer is a suitable very small-sized block for binary data, if the buffer is full then the data is sent for processing. Sometimes buffer is used as middleware between the processing of data and incoming because we need a processor for the processing of data but sometimes processor is busy with some other task so we need to transfer the data somewhere. need to be stored. This requirement is met by the buffer. In NodeJs the buffer class provides accessibility to allocate a buffer and use it. And the buffer class is a global class so no need to import it. If you want to learn more about Buffer refer to <a href=\"https:\/\/www.geeksforgeeks.org\/node-js-buffers\/\">this article.<\/a><\/p> <h3>Difference between Chunks and Buffer:<\/h3> <table> <thead> <tr> <th> <p><strong>Chunks<\/strong><\/p> <\/th> <th> <p><strong>Buffer<\/strong><\/p> <\/th> <\/tr> <\/thead> <tbody> <tr> <td>The chunks are a piece of binary data.<\/td> <td>Buffer is a global class for managing the chunk binary of data in NodeJs.<\/td> <\/tr> <tr> <td>Chunks are contained binary data.<\/td> <td>Buffer class manages most of the data in binary format but they are also able to manage data in another format also.<\/td> <\/tr> <tr> <td>Chunk is in the octet format means the only works with a specific stream or if not handled properly it corrupts the data.<\/td> <td>Buffer is a class so the handles all types of exceptions that occur while handling the chunk data.<\/td> <\/tr> <tr> <td>Chunk is an independent binary data container, handled by Buffer.<\/td> <td>Buffer is dependent on Chunks or streams for data transferring.<\/td> <\/tr> <tr> <td>We also use chunks to retrieve data outside of the program or through the internet.<\/td> <td>buffer class is also used to retrieve the data in a normal form of data.<\/td> <\/tr> <tr> <td>We cannot control the chunks because they are free to flow.<\/td> <td>But we control the buffer and stream for how to flow and used the data.<\/td> <\/tr> <tr> <td>we can never create chunks.<\/td> <td>But we can create a buffer and it will contain chunks.<\/td> <\/tr> <tr> <td><Buffer <strong><u>48 65 6c 6c 6f<\/u><\/strong>> The underlined part of the buffer is a chunk.<\/td> <td><strong><Buffer 48 65 6c 6c 6f><\/strong> The all-in angular braces are a buffer.<\/td> <\/tr> <tr> <td>One chunk stores one byte of binary data.<\/td> <td>The Buffer size depends on the ram and hardware of the machine.<\/td> <\/tr> <\/tbody> <\/table>",
    "author": "Suryapratap Singh",
    "like": 0
}